import asyncio
import logging
from idlelib.pyshell import usage_msg

from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message
from aiogram.filters import CommandStart,Command
import config
from keyboards import kb1, kb2
from random_fox import fox
from random import randint

API_TOKEN = config.token

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=config.token)
dp = Dispatcher()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command('start'))
async def start_handler(message: types.Message):
    name = message.chat.first_name
    await message.answer(F'–ü—Ä–∏–≤–µ—Ç, {name}', reply_markup=kb1)

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@dp.message(Command('stop'))
async def stop_handler(message: types.Message):
    name = message.chat.first_name
    await message.answer(F'bye, {name}')


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@dp.message(Command('fox'))
@dp.message(F.text.lower() == 'show fox')
async def send_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f'look, fox {name}')
    await message.answer_photo(photo=img_fox)


# –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(F'–ø—Ä–∏–≤–µ—Ç-–ü—Ä–∏–≤–µ—Ç, {name}')
    elif '–ø–æ–∫–∞' == msg_user:
        await message.answer(F'–ø–æ–∫–∞-–ü–æ–∫–∞, {name}')
    elif '—Ç—ã –∫—Ç–æ' in msg_user:
        await message.answer_dice(emoji="üé≥")
    elif 'fox' in msg_user:
        await message.answer(f'look what I have, {name}', reply_markup=kb2)
    else:
        await message.answer(F'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
